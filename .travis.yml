language: python
cache: pip
dist: xenial
sudo: required

env:
  global:
    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - CHANGE_MINIKUBE_NONE_USER=true
    - KUBECONFIG=$HOME/.kube/config

python:
  - "3.7"

services:
  - docker

install:
  - pip install semver PyYAML
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - TAG=$TRAVIS_COMMIT dss/scripts/build_and_push_to_docker_hub.sh bump

before_script:
  # Download kubectl, which is a requirement for using minikube.
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download minikube.
  - curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.5.2/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  - mkdir -p $HOME/.kube $HOME/.minikube
  - touch $KUBECONFIG
  - sudo minikube start --vm-driver=none --kubernetes-version=v1.16.0  --addons ingress --addons metrics-server
  - "sudo chown -R travis: /home/travis/.minikube/"
  # Following is just to demo that the kubernetes cluster works.
  - kubectl cluster-info
  # Verify kube-addon-manager.
  # kube-addon-manager is responsible for managing other kubernetes components, such as kube-dns, dashboard, storage-provisioner..
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lcomponent=kube-addon-manager -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-addon-manager to be available"; kubectl get pods --all-namespaces; done
  # Wait for kube-dns to be ready.
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl -n kube-system get pods -lk8s-app=kube-dns -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1;echo "waiting for kube-dns to be available"; kubectl get pods --all-namespaces; done
  # Create an image pull secret.
  - kubectl create secret docker-registry regcred --docker-server=https://index.docker.io/v1/ --docker-username=$DOCKER_USERNAME --docker-password=$DOCKER_PASSWORD --docker-email=ben.dayan@gmail.com
  # Install helm, as it is required for testing
  - curl https://get.helm.sh/helm-v3.0.0-rc.2-linux-amd64.tar.gz | tar xz linux-amd64/helm && chmod +x linux-amd64/helm && sudo mv linux-amd64/helm /usr/local/bin/

# command to run tests
script:
  - dss/scripts/run_tests_in_cluster.sh $TRAVIS_COMMIT

deploy:
  provider: script
  script: bash dss/scripts/deploy.sh $TRAVIS_COMMIT
