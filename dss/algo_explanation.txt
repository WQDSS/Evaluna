Algorithim explenation

This is an initial algorithim, mainly for testing the SW integreation and to provide first feedback. 

Here is the example of the JSON input file:

{
    "model_run": {
        "input_files": [
            { "name":"a.csv", "min_qwd":"1000", "max_qwd":"2000", "steps":"500" },
            { "name":"b.csv", "min_qwd":"0", "max_qwd":"100", "steps":"50" }
        ]
    },
    "model_analysis": {
        "output_file": "out.csv",
        "parameters": [
            { "name":"NO3", "target":"3.7", "weight":"4", "score_step":"0.1" },
            { "name":"NH4", "target":"2.4", "weight":"2", "score_step":"0.2" },
            { "name":"DO", "target":"8", "weight":"2", "score_step":"0.5" }
        ]
    }
}


The "model_run" section tells the DSS what changes it needs to do in the model input files. It gates the file name, range and steps of change. 
Then the DSS will run all permutations of the input's.

The "model_analysis" section defines to the DSS how to choose the best run out of all the permutations it executed. 
It get's a module output file name and the parameters to do the score. 
For each parameter there is a target value and "weight" that represents the parameter importence in relativ to the other parameters. 
The "score_step" defines what distance from the target a score is being given. 
This is the algorithm to find the best run:
  
  run score = sum(|target- distance in score steps|/weight)
  best run = min(all run scores)


